<?php
/**
 * Created by youyi000.
 * DateTime: 2017/11/25 14:28
 * Describe：
 *      基于Sql语句的DataProvider
 */


class ZSqlDataProvider  extends CSqlDataProvider
{

    /**
     * 需要查询的字段组合字符串
     * @var string
     */
    public $fields;

    /**
     * 计数sql
     * @var string
     */
    public $countSql;

    public function __construct($sql, array $config = array())
    {
        parent::__construct($sql, $config);
        if(!empty($this->fields))
        {
            $this->sql=str_replace("{fields}",$this->fields,$sql);
        }
        if(empty($this->countSql))
            $this->setCountSql($sql);
    }

    public function setCountSql($sql)
    {
        if(!empty($sql))
        {
            $pattern='/^select\s(.*?)\s+from\s+/is';
            preg_match($pattern, $sql,$matches);
            if(is_array($matches) && count($matches)>0)
                $this->countSql=str_replace($matches[1]," count(*) as total " ,$sql);
        }
        /*else
            $this->countSql=$value;*/
    }

    protected function getDb()
    {
        $db=$this->db===null ? Mod::app()->db : $this->db;
        return $db;
    }

    /**
     * Fetches the data from the persistent data storage.
     * @return array list of data items
     */
    protected function fetchData()
    {
        $sql=$this->sql;
        $db=$this->getDb();
        //$db->active=true;

        if(($sort=$this->getSort())!==false)
        {
            $order=$sort->getOrderBy();
            if(!empty($order))
            {
                if(preg_match('/\s+order\s+by\s+[\w\s,]+$/i',$sql))
                    $sql.=', '.$order;
                else
                    $sql.=' ORDER BY '.$order;
            }
        }

        if(($pagination=$this->getPagination())!==false)
        {
            $pagination->setItemCount($this->getTotalItemCount());
            $limit=$pagination->getLimit();
            $offset=$pagination->getOffset();
            $sql=$db->getCommandBuilder()->applyLimit($sql,$limit,$offset);
        }

        $command=$db->createCommand($sql);
        foreach($this->params as $name=>$value)
            $command->bindValue($name,$value);

        return $command->queryAll();
    }

    /**
     * 计算总数量
     * @return int|mixed
     * @throws CException
     */
    protected function calculateTotalItemCount()
    {
        if(empty($this->countSql))
            return 0;
        $db=$this->getDb();
        $command=$db->createCommand($this->countSql);
        foreach($this->params as $name=>$value)
            $command->bindValue($name,$value);

        $res= $command->queryScalar();
        if(!empty($res))
            return $res;
        return 0;
    }

    /**
     * Returns the pagination object.
     * @param string $className the pagination object class name. Parameter is available since version 1.1.13.
     * @return ZPagination|false the pagination object. If this is false, it means the pagination is disabled.
     */
    public function getPagination($className = 'ZPagination')
    {
        return parent::getPagination($className); // TODO: Change the autogenerated stub
    }


}